import fetch from 'node-fetch';

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const TELEGRAM_MAX_LENGTH = 4000; // –£—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∞—Å –¥–ª—è Markdown-—Ä–∞–∑–º–µ—Ç–∫–∏

/**
 * –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
 * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} jobs - –°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const sendTelegramNotification = async (user, jobs) => {
  try {
    let messages = [];
    let currentMessage = `üî• *–ù–æ–≤—ã–π –ø—Ä–µ–º–∏—É–º-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!* üî•\n\n` +
                         `üë§ *–ò–º—è:* ${user.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.lastName || ''}\n` +
                         `üìß *Email:* ${user.email}\n` +
                         `üíé *–°—Ç–∞—Ç—É—Å:* –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n` +
                         `üìå *–í–∞–∫–∞–Ω—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*`;

    if (jobs.length === 0) {
      currentMessage += `\n‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞ –Ω–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π.`;
      messages.push(currentMessage);
    } else {
      jobs.forEach((job, index) => {
        let jobMessage = `\n\nüîπ *${index + 1}. ${job.title}* \n` +
                         `üìç *–ì–æ—Ä–æ–¥:* ${job.city?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                         `üí∞ *–ó–∞—Ä–ø–ª–∞—Ç–∞:* ${job.salary}\n` +
                         `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${job.phone}\n` +
                         `üìÖ *–î–∞—Ç–∞:* ${new Date(job.createdAt).toLocaleDateString()}\n` +
                         `üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* ${job.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n` +
                         `---`;

        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞–Ω–µ—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–º, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ
        if (currentMessage.length + jobMessage.length > TELEGRAM_MAX_LENGTH) {
          messages.push(currentMessage);
          currentMessage = ''; // –û—á–∏—â–∞–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –±–ª–æ–∫
        }

        currentMessage += jobMessage;
      });

      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤
      if (currentMessage.length > 0) {
        messages.push(currentMessage);
      }
    }

    // üî• –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ
    for (const msg of messages) {
      await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: msg,
          parse_mode: 'Markdown',
        }),
      });
    }

    console.log('‚úÖ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
  }
};
