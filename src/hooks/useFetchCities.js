import { useState, useEffect } from 'react';
import axios from 'axios';
import { toast } from 'react-hot-toast';

const API_URL = import.meta.env.VITE_API_URL; // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è

const useFetchCities = () => {
  const [cities, setCities] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const loadCities = async () => {
      try {
        console.log(`üìå –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å: ${API_URL}/cities`);
        const response = await axios.get(`${API_URL}/cities`);

        console.log("üìå –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:", response.status);
        console.log("üìå –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:", response.data);

        if (!response.data || !Array.isArray(response.data)) {
          console.error("‚ùå API –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", response.data);
          setCities([]);
          return;
        }

        console.log("‚úÖ –ì–æ—Ä–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", response.data);
        setCities(response.data);
      } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–æ—Ä–æ–¥–æ–≤:", error.response?.data || error.message);
        toast.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–æ—Ä–æ–¥–∞!");
      } finally {
        setLoading(false);
      }
    };

    loadCities();
  }, []);

  return { cities, loading };
};

export default useFetchCities;
